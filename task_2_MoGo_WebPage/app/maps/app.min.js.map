{"version":3,"sources":["jquery.bxslider.js","jquery.collapsible.js","jquery.custom-scrollbar.js","main.js"],"names":["$","defaults","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","slideZIndex","wrapperClass","touchEnabled","swipeThreshold","oneToOneTouch","preventDefaultSwipeX","preventDefaultSwipeY","ariaLive","ariaHidden","keyboardEnabled","pager","pagerType","pagerShortSeparator","pagerSelector","buildPager","pagerCustom","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","autoControlsCombine","autoControlsSelector","auto","pause","autoStart","autoDirection","stopAutoOnClick","autoHover","autoDelay","autoSlideForOnePage","minSlides","maxSlides","moveSlides","slideWidth","shrinkItems","onSliderLoad","onSlideBefore","onSlideAfter","onSlideNext","onSlidePrev","onSliderResize","fn","bxSlider","options","this","length","each","slider","el","windowWidth","window","width","windowHeight","height","data","init","settings","extend","parseInt","children","Math","floor","random","active","index","carousel","minThreshold","maxThreshold","working","interval","animProp","usingCSS","div","document","createElement","props","i","undefined","style","cssPrefix","replace","toLowerCase","attr","setup","preloadSelector","eq","wrap","viewport","parent","loader","prepend","css","position","overflow","maxWidth","getViewportMaxWidth","float","listStyle","getSlideWidth","zIndex","display","appendCaptions","last","getPagerQty","fitVids","appendControls","appendControlsAuto","appendPager","after","loadElements","start","selector","callback","total","find","count","one","complete","trigger","slice","sliceAppend","clone","addClass","slicePrepend","append","remove","setSlidePosition","getViewportHeight","redrawSlider","call","initialized","bind","resizeWindow","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","keydown","keyPress","currentIndex","getMoveBy","add","outerHeight","max","apply","map","get","parseFloat","newElWidth","wrapWidth","ceil","getNumberSlidesShowing","slidesShowing","childWidth","first","pagerQty","breakPoint","counter","lastChild","lastShowingIndex","setPositionProperty","left","outerWidth","top","value","type","duration","params","animateObj","propValue","e","target","is","unbind","updateAfterSlideTransition","resetValue","tickerLoop","animate","populatePager","pagerHtml","linkContent","isFunction","pagerEl","html","on","clickPagerBind","next","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","updateAutoControls","title","preventDefault","hasClass","stopAuto","goToNextSlide","goToPrevSlide","startAuto","pagerLink","pagerIndex","currentTarget","goToSlide","slideIndex","len","removeClass","oldIndex","state","setTimeout","focus","blur","hover","autoPaused","transform","idx","ratio","property","newSpeed","totalDimens","startPosition","split","abs","resumeSpeed","animateProperty","reset","isOnScreen","win","scrollTop","scrollLeft","bounds","offset","right","bottom","activeElementTag","activeElement","tagName","tagFilters","p","RegExp","result","exec","keyCode","touch","x","y","end","onTouchStart","originalPos","orig","originalEvent","touchPoints","changedTouches","pageX","pageY","setPointerCapture","pointerId","onTouchMove","onTouchEnd","onPointerCancel","releasePointerCapture","xMovement","yMovement","change","distance","windowWidthNew","windowHeightNew","applyAriaHiddenAttributes","startVisibleIndex","numberOfSlidesShowing","setSlideIndex","direction","requestEl","performTransition","moveBy","filter","fadeOut","fadeIn","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideElement","getSlideCount","isWorking","destroySlider","removeAttr","unwrap","removeData","reloadSlider","jQuery","collapsible","accordion","accordionUpSpeed","accordionDownSpeed","collapseSpeed","contentOpen","arrowRclass","arrowDclass","$thisEven","$thisOdd","accord","console","log","show","toggleClass","click","slideUp","slideDown","Array","isArray","slideToggle","customScrollbar","args","defaultOptions","skin","hScroll","vScroll","updateOnWindowResize","animationSpeed","onCustomScroll","swipeSpeed","wheelSpeed","fixedThumbWidth","fixedThumbHeight","Scrollable","element","$element","addScrollableClass","addSkinClass","addScrollBarComponents","vScrollbar","Scrollbar","VSizing","hScrollbar","HSizing","initKeyboardScrolling","bindEvents","prototype","scrollableAdded","removeScrollableClass","skinClassAdded","removeSkinClass","assignViewPort","$viewPort","wrapInner","viewPortAdded","assignOverview","$overview","overviewAdded","addScrollBar","removeScrollbarComponents","removeScrollbar","orientation","fun","resize","keepPosition","scrollTo","scrollToElement","scrollToXY","scrollToX","scrollToY","scrollOverviewTo","removeKeyboardScrolling","setAnimationSpeed","isInside","wrappingElement","$wrappingElement","elementOffset","wrappingElementOffset","_this","elementKeydown","event","keyScroll","scrollable","sizing","$scrollBar","scrollBar","$thumb","setScrollPosition","initMouseMoveScrolling","initMouseWheelScrolling","initTouchScrolling","initMouseClickScrolling","initWindowResize","size","viewPortSize","overviewSize","thumbSize","calculateThumbSize","maxThumbPosition","calculateMaxThumbPosition","maxOverviewPosition","calculateMaxOverviewPosition","enabled","scrollPercent","rescroll","toggle","fixedSize","fixedThumbSize","minSize","mousedown","startMouseMoveScrolling","documentMouseup","stopMouseMoveScrolling","mouseup","documentMousemove","mouseMoveScroll","mousemove","stopPropagation","removeMouseMoveScrolling","mousewheel","delta","deltaX","deltaY","mouseWheelScroll","removeMouseWheelScrolling","addEventListener","elementTouchstart","startTouchScrolling","documentTouchmove","touchScroll","elementTouchend","stopTouchScrolling","removeTouchScrolling","removeEventListener","scrollBarClick","mouseClickScroll","removeMouseClickScrolling","windowResize","removeWindowResize","isKeyScrolling","key","keyScrollDelta","scrollingKey","scrollingKeys","mouseMoveScrolling","setUnselectable","setScrollEvent","mouseDelta","scrollEvent","scrollThumbBy","touches","touchScrolling","scrolled","scrollOverviewBy","wheelDelta","scrollAxis","offsetComponent","keyDown","which","thumbPosition","positionOrMax","oldScrollPercent","overviewPosition","triggerCustomScroll","setScrollPositionWithAnimation","scrollDirection","thumbAnimationOpts","overviewAnimationOpts","overviewOffset","$el","arg","event1","event2","oldPercent","newPercent","37","39","38","40","33","34","handler","orgEvent","arguments","fix","detail","axis","HORIZONTAL_AXIS","wheelDeltaY","wheelDeltaX","unshift","dispatch","handle","types","fixHooks","mouseHooks","special","onmousewheel","teardown","unmousewheel","toggleResponsiveMenu","ready"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["/**\n * bxSlider v4.2.12\n * Copyright 2013-2015 Steven Wanderski\n * Written while drinking Belgian ales and listening to jazz\n * Licensed under MIT (http://opensource.org/licenses/MIT)\n */\n\n;(function($) {\n\n  var defaults = {\n\n    // GENERAL\n    mode: 'horizontal',\n    slideSelector: '',\n    infiniteLoop: true,\n    hideControlOnEnd: false,\n    speed: 500,\n    easing: null,\n    slideMargin: 0,\n    startSlide: 0,\n    randomStart: false,\n    captions: false,\n    ticker: false,\n    tickerHover: false,\n    adaptiveHeight: false,\n    adaptiveHeightSpeed: 500,\n    video: false,\n    useCSS: true,\n    preloadImages: 'visible',\n    responsive: true,\n    slideZIndex: 50,\n    wrapperClass: 'bx-wrapper',\n\n    // TOUCH\n    touchEnabled: true,\n    swipeThreshold: 50,\n    oneToOneTouch: true,\n    preventDefaultSwipeX: true,\n    preventDefaultSwipeY: false,\n\n    // ACCESSIBILITY\n    ariaLive: true,\n    ariaHidden: true,\n\n    // KEYBOARD\n    keyboardEnabled: false,\n\n    // PAGER\n    pager: true,\n    pagerType: 'full',\n    pagerShortSeparator: ' / ',\n    pagerSelector: null,\n    buildPager: null,\n    pagerCustom: null,\n\n    // CONTROLS\n    controls: true,\n    nextText: 'Next',\n    prevText: 'Prev',\n    nextSelector: null,\n    prevSelector: null,\n    autoControls: false,\n    startText: 'Start',\n    stopText: 'Stop',\n    autoControlsCombine: false,\n    autoControlsSelector: null,\n\n    // AUTO\n    auto: false,\n    pause: 4000,\n    autoStart: true,\n    autoDirection: 'next',\n    stopAutoOnClick: false,\n    autoHover: false,\n    autoDelay: 0,\n    autoSlideForOnePage: false,\n\n    // CAROUSEL\n    minSlides: 1,\n    maxSlides: 1,\n    moveSlides: 0,\n    slideWidth: 0,\n    shrinkItems: false,\n\n    // CALLBACKS\n    onSliderLoad: function() { return true; },\n    onSlideBefore: function() { return true; },\n    onSlideAfter: function() { return true; },\n    onSlideNext: function() { return true; },\n    onSlidePrev: function() { return true; },\n    onSliderResize: function() { return true; }\n  };\n\n  $.fn.bxSlider = function(options) {\n\n    if (this.length === 0) {\n      return this;\n    }\n\n    // support multiple elements\n    if (this.length > 1) {\n      this.each(function() {\n        $(this).bxSlider(options);\n      });\n      return this;\n    }\n\n    // create a namespace to be used throughout the plugin\n    var slider = {},\n    // set a reference to our slider element\n    el = this,\n    // get the original window dimens (thanks a lot IE)\n    windowWidth = $(window).width(),\n    windowHeight = $(window).height();\n\n    // Return if slider is already initialized\n    if ($(el).data('bxSlider')) { return; }\n\n    /**\n     * ===================================================================================\n     * = PRIVATE FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Initializes namespace settings to be used throughout plugin\n     */\n    var init = function() {\n      // Return if slider is already initialized\n      if ($(el).data('bxSlider')) { return; }\n      // merge user-supplied options with the defaults\n      slider.settings = $.extend({}, defaults, options);\n      // parse slideWidth setting\n      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n      // store the original children\n      slider.children = el.children(slider.settings.slideSelector);\n      // check if actual number of slides is less than minSlides / maxSlides\n      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }\n      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }\n      // if random start, set the startSlide setting to random number\n      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }\n      // store active slide information\n      slider.active = { index: slider.settings.startSlide };\n      // store if the slider is in carousel mode (displaying / moving multiple slides)\n      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;\n      // if carousel, force preloadImages = 'all'\n      if (slider.carousel) { slider.settings.preloadImages = 'all'; }\n      // calculate the min / max width thresholds based on min / max number of slides\n      // used to setup and update carousel slides dimensions\n      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n      // store the current state of the slider (if currently animating, working is true)\n      slider.working = false;\n      // initialize the controls object\n      slider.controls = {};\n      // initialize an auto interval\n      slider.interval = null;\n      // determine which property to use for transitions\n      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';\n      // determine if hardware acceleration can be used\n      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {\n        // create our test div element\n        var div = document.createElement('div'),\n        // css transition properties\n        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n        // test for each property\n        for (var i = 0; i < props.length; i++) {\n          if (div.style[props[i]] !== undefined) {\n            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n            slider.animProp = '-' + slider.cssPrefix + '-transform';\n            return true;\n          }\n        }\n        return false;\n      }());\n      // if vertical mode always make maxSlides and minSlides equal\n      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }\n      // save original style data\n      el.data('origStyle', el.attr('style'));\n      el.children(slider.settings.slideSelector).each(function() {\n        $(this).data('origStyle', $(this).attr('style'));\n      });\n\n      // perform all DOM / CSS modifications\n      setup();\n    };\n\n    /**\n     * Performs all DOM and CSS modifications\n     */\n    var setup = function() {\n      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)\n\n      // wrap el in a wrapper\n      el.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n      // store a namespace reference to .bx-viewport\n      slider.viewport = el.parent();\n\n      // add aria-live if the setting is enabled and ticker mode is disabled\n      if (slider.settings.ariaLive && !slider.settings.ticker) {\n        slider.viewport.attr('aria-live', 'polite');\n      }\n      // add a loading div to display while images are loading\n      slider.loader = $('<div class=\"bx-loading\" />');\n      slider.viewport.prepend(slider.loader);\n      // set el to a massive width, to hold any needed slides\n      // also strip any margin and padding from el\n      el.css({\n        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 415) + '%' : 'auto',\n        position: 'relative'\n      });\n      // if using CSS, add the easing property\n      if (slider.usingCSS && slider.settings.easing) {\n        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n      } else if (!slider.settings.easing) {\n        slider.settings.easing = 'swing';\n      }\n      // make modifications to the viewport (.bx-viewport)\n      slider.viewport.css({\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative'\n      });\n      slider.viewport.parent().css({\n        maxWidth: getViewportMaxWidth()\n      });\n      // apply css to all slider children\n      slider.children.css({\n        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',\n        listStyle: 'none',\n        position: 'relative'\n      });\n      // apply the calculated width after the float is applied to prevent scrollbar interference\n      slider.children.css('width', getSlideWidth());\n      // if slideMargin is supplied, add the css\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }\n      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }\n      // if \"fade\" mode, add positioning and z-index CSS\n      if (slider.settings.mode === 'fade') {\n        slider.children.css({\n          position: 'absolute',\n          zIndex: 0,\n          display: 'none'\n        });\n        // prepare the z-index on the showing element\n        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n      }\n      // create an element to contain all slider controls (pager, start / stop, etc)\n      slider.controls.el = $('<div class=\"bx-controls\" />');\n      // if captions are requested, add them\n      if (slider.settings.captions) { appendCaptions(); }\n      // check if startSlide is last slide\n      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;\n      // if video is true, set up the fitVids plugin\n      if (slider.settings.video) { el.fitVids(); }\n      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }\n      // only check for control addition if not in \"ticker\" mode\n      if (!slider.settings.ticker) {\n        // if controls are requested, add them\n        if (slider.settings.controls) { appendControls(); }\n        // if auto is true, and auto controls are requested, add them\n        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }\n        // if pager is requested, add it\n        if (slider.settings.pager) { appendPager(); }\n        // if any control option is requested, add the controls wrapper\n        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }\n      // if ticker mode, do not allow a pager\n      } else {\n        slider.settings.pager = false;\n      }\n      loadElements(preloadSelector, start);\n    };\n\n    var loadElements = function(selector, callback) {\n      var total = selector.find('img:not([src=\"\"]), iframe').length,\n      count = 0;\n      if (total === 0) {\n        callback();\n        return;\n      }\n      selector.find('img:not([src=\"\"]), iframe').each(function() {\n        $(this).one('load error', function() {\n          if (++count === total) { callback(); }\n        }).each(function() {\n          if (this.complete) { $(this).trigger('load'); }\n        });\n      });\n    };\n\n    /**\n     * Start the slider\n     */\n    var start = function() {\n      // if infinite loop, prepare additional slides\n      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {\n        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,\n        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),\n        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');\n        if (slider.settings.ariaHidden) {\n          sliceAppend.attr('aria-hidden', true);\n          slicePrepend.attr('aria-hidden', true);\n        }\n        el.append(sliceAppend).prepend(slicePrepend);\n      }\n      // remove the loading DOM element\n      slider.loader.remove();\n      // set the left / top position of \"el\"\n      setSlidePosition();\n      // if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }\n      // set the viewport height\n      slider.viewport.height(getViewportHeight());\n      // make sure everything is positioned just right (same as a window resize)\n      el.redrawSlider();\n      // onSliderLoad callback\n      slider.settings.onSliderLoad.call(el, slider.active.index);\n      // slider has been fully initialized\n      slider.initialized = true;\n      // bind the resize call to the window\n      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }\n      // if auto is true and has more than 1 page, start the show\n      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }\n      // if ticker is true, start the ticker\n      if (slider.settings.ticker) { initTicker(); }\n      // if pager is requested, make the appropriate pager link active\n      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }\n      // check for any updates to the controls (like hideControlOnEnd updates)\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if touchEnabled is true, setup the touch events\n      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }\n      // if keyboardEnabled is true, setup the keyboard events\n      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {\n        $(document).keydown(keyPress);\n      }\n    };\n\n    /**\n     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n     */\n    var getViewportHeight = function() {\n      var height = 0;\n      // first determine which children (slides) should be used in our height calculation\n      var children = $();\n      // if mode is not \"vertical\" and adaptiveHeight is false, include all children\n      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {\n        children = slider.children;\n      } else {\n        // if not carousel, return the single active child\n        if (!slider.carousel) {\n          children = slider.children.eq(slider.active.index);\n        // if carousel, return a slice of children\n        } else {\n          // get the individual slide index\n          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();\n          // add the current slide to the children\n          children = slider.children.eq(currentIndex);\n          // cycle through the remaining \"showing\" slides\n          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {\n            // if looped back to the start\n            if (currentIndex + i >= slider.children.length) {\n              children = children.add(slider.children.eq(i - 1));\n            } else {\n              children = children.add(slider.children.eq(currentIndex + i));\n            }\n          }\n        }\n      }\n      // if \"vertical\" mode, calculate the sum of the heights of the children\n      if (slider.settings.mode === 'vertical') {\n        children.each(function(index) {\n          height += $(this).outerHeight();\n        });\n        // add user-supplied margins\n        if (slider.settings.slideMargin > 0) {\n          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n        }\n      // if not \"vertical\" mode, calculate the max height of the children\n      } else {\n        height = Math.max.apply(Math, children.map(function() {\n          return $(this).outerHeight(false);\n        }).get());\n      }\n\n      if (slider.viewport.css('box-sizing') === 'border-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n      } else if (slider.viewport.css('box-sizing') === 'padding-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n      }\n\n      return height;\n    };\n\n    /**\n     * Returns the calculated width to be used for the outer wrapper / viewport\n     */\n    var getViewportMaxWidth = function() {\n      var width = '100%';\n      if (slider.settings.slideWidth > 0) {\n        if (slider.settings.mode === 'horizontal') {\n          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n        } else {\n          width = slider.settings.slideWidth;\n        }\n      }\n      return width;\n    };\n\n    /**\n     * Returns the calculated width to be applied to each slide\n     */\n    var getSlideWidth = function() {\n      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width\n      wrapWidth      = slider.viewport.width();    // get the current viewport width\n      // if slide width was not supplied, or is larger than the viewport use the viewport width\n      if (slider.settings.slideWidth === 0 ||\n        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n        slider.settings.mode === 'vertical') {\n        newElWidth = wrapWidth;\n      // if carousel, use the thresholds to determine the width\n      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {\n        if (wrapWidth > slider.maxThreshold) {\n          return newElWidth;\n        } else if (wrapWidth < slider.minThreshold) {\n          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n        } else if (slider.settings.shrinkItems) {\n          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);\n        }\n      }\n      return newElWidth;\n    };\n\n    /**\n     * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n     */\n    var getNumberSlidesShowing = function() {\n      var slidesShowing = 1,\n      childWidth = null;\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {\n        // if viewport is smaller than minThreshold, return minSlides\n        if (slider.viewport.width() < slider.minThreshold) {\n          slidesShowing = slider.settings.minSlides;\n        // if viewport is larger than maxThreshold, return maxSlides\n        } else if (slider.viewport.width() > slider.maxThreshold) {\n          slidesShowing = slider.settings.maxSlides;\n        // if viewport is between min / max thresholds, divide viewport width by first child width\n        } else {\n          childWidth = slider.children.first().width() + slider.settings.slideMargin;\n          slidesShowing = Math.floor((slider.viewport.width() +\n            slider.settings.slideMargin) / childWidth);\n        }\n      // if \"vertical\" mode, slides showing will always be minSlides\n      } else if (slider.settings.mode === 'vertical') {\n        slidesShowing = slider.settings.minSlides;\n      }\n      return slidesShowing;\n    };\n\n    /**\n     * Returns the number of pages (one full viewport of slides is one \"page\")\n     */\n    var getPagerQty = function() {\n      var pagerQty = 0,\n      breakPoint = 0,\n      counter = 0;\n      // if moveSlides is specified by the user\n      if (slider.settings.moveSlides > 0) {\n        if (slider.settings.infiniteLoop) {\n          pagerQty = Math.ceil(slider.children.length / getMoveBy());\n        } else {\n          // when breakpoint goes above children length, counter is the number of pages\n          while (breakPoint < slider.children.length) {\n            ++pagerQty;\n            breakPoint = counter + getNumberSlidesShowing();\n            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n          }\n        }\n      // if moveSlides is 0 (auto) divide children length by sides showing, then round up\n      } else {\n        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n      }\n      return pagerQty;\n    };\n\n    /**\n     * Returns the number of individual slides by which to shift the slider\n     */\n    var getMoveBy = function() {\n      // if moveSlides was set by the user and moveSlides is less than number of slides showing\n      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {\n        return slider.settings.moveSlides;\n      }\n      // if moveSlides is 0 (auto)\n      return getNumberSlidesShowing();\n    };\n\n    /**\n     * Sets the slider's (el) left or top position\n     */\n    var setSlidePosition = function() {\n      var position, lastChild, lastShowingIndex;\n      // if last slide, not infinite loop, and number of children is larger than specified maxSlides\n      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {\n        if (slider.settings.mode === 'horizontal') {\n          // get the last child's position\n          lastChild = slider.children.last();\n          position = lastChild.position();\n          // set the left position\n          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n        } else if (slider.settings.mode === 'vertical') {\n          // get the last showing index's position\n          lastShowingIndex = slider.children.length - slider.settings.minSlides;\n          position = slider.children.eq(lastShowingIndex).position();\n          // set the top position\n          setPositionProperty(-position.top, 'reset', 0);\n        }\n      // if not last slide\n      } else {\n        // get the position of the first showing slide\n        position = slider.children.eq(slider.active.index * getMoveBy()).position();\n        // check for last slide\n        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }\n        // set the respective position\n        if (position !== undefined) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n    };\n\n    /**\n     * Sets the el's animating property position (which in turn will sometimes animate el).\n     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n     *\n     * @param value (int)\n     *  - the animating property's value\n     *\n     * @param type (string) 'slide', 'reset', 'ticker'\n     *  - the type of instance for which the function is being\n     *\n     * @param duration (int)\n     *  - the amount of time (in ms) the transition should occupy\n     *\n     * @param params (array) optional\n     *  - an optional parameter containing any variables that need to be passed in\n     */\n    var setPositionProperty = function(value, type, duration, params) {\n      var animateObj, propValue;\n      // use CSS transform\n      if (slider.usingCSS) {\n        // determine the translate3d value\n        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n        // add the CSS transition-duration\n        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n        if (type === 'slide') {\n          // set the property value\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            // bind a callback method - executes when CSS transition completes\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              updateAfterSlideTransition();\n            });\n          } else { //duration = 0\n            updateAfterSlideTransition();\n          }\n        } else if (type === 'reset') {\n          el.css(slider.animProp, propValue);\n        } else if (type === 'ticker') {\n          // make the transition use 'linear'\n          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              // reset the position\n              setPositionProperty(params.resetValue, 'reset', 0);\n              // start the loop again\n              tickerLoop();\n            });\n          } else { //duration = 0\n            setPositionProperty(params.resetValue, 'reset', 0);\n            tickerLoop();\n          }\n        }\n      // use JS animate\n      } else {\n        animateObj = {};\n        animateObj[slider.animProp] = value;\n        if (type === 'slide') {\n          el.animate(animateObj, duration, slider.settings.easing, function() {\n            updateAfterSlideTransition();\n          });\n        } else if (type === 'reset') {\n          el.css(slider.animProp, value);\n        } else if (type === 'ticker') {\n          el.animate(animateObj, duration, 'linear', function() {\n            setPositionProperty(params.resetValue, 'reset', 0);\n            // run the recursive loop after animation\n            tickerLoop();\n          });\n        }\n      }\n    };\n\n    /**\n     * Populates the pager with proper amount of pages\n     */\n    var populatePager = function() {\n      var pagerHtml = '',\n      linkContent = '',\n      pagerQty = getPagerQty();\n      // loop through each pager item\n      for (var i = 0; i < pagerQty; i++) {\n        linkContent = '';\n        // if a buildPager function is supplied, use it to get pager link value, else use index + 1\n        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {\n          linkContent = slider.settings.buildPager(i);\n          slider.pagerEl.addClass('bx-custom-pager');\n        } else {\n          linkContent = i + 1;\n          slider.pagerEl.addClass('bx-default-pager');\n        }\n        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n        // add the markup to the string\n        pagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n      }\n      // populate the pager element with pager links\n      slider.pagerEl.html(pagerHtml);\n    };\n\n    /**\n     * Appends the pager to the controls element\n     */\n    var appendPager = function() {\n      if (!slider.settings.pagerCustom) {\n        // create the pager DOM element\n        slider.pagerEl = $('<div class=\"bx-pager\" />');\n        // if a pager selector was supplied, populate it with the pager\n        if (slider.settings.pagerSelector) {\n          $(slider.settings.pagerSelector).html(slider.pagerEl);\n        // if no pager selector was supplied, add it after the wrapper\n        } else {\n          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n        }\n        // populate the pager\n        populatePager();\n      } else {\n        slider.pagerEl = $(slider.settings.pagerCustom);\n      }\n      // assign the pager click binding\n      slider.pagerEl.on('click touchend', 'a', clickPagerBind);\n    };\n\n    /**\n     * Appends prev / next controls to the controls element\n     */\n    var appendControls = function() {\n      slider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n      slider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n      // bind click actions to the controls\n      slider.controls.next.bind('click touchend', clickNextBind);\n      slider.controls.prev.bind('click touchend', clickPrevBind);\n      // if nextSelector was supplied, populate it\n      if (slider.settings.nextSelector) {\n        $(slider.settings.nextSelector).append(slider.controls.next);\n      }\n      // if prevSelector was supplied, populate it\n      if (slider.settings.prevSelector) {\n        $(slider.settings.prevSelector).append(slider.controls.prev);\n      }\n      // if no custom selectors were supplied\n      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {\n        // add the controls to the DOM\n        slider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n        // add the control elements to the directionEl\n        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n        // slider.viewport.append(slider.controls.directionEl);\n        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n      }\n    };\n\n    /**\n     * Appends start / stop auto controls to the controls element\n     */\n    var appendControlsAuto = function() {\n      slider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n      slider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n      // add the controls to the DOM\n      slider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n      // bind click actions to the controls\n      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n      // if autoControlsCombine, insert only the \"start\" control\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.append(slider.controls.start);\n      // if autoControlsCombine is false, insert both controls\n      } else {\n        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n      }\n      // if auto controls selector was supplied, populate it with the controls\n      if (slider.settings.autoControlsSelector) {\n        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n      // if auto controls selector was not supplied, add it after the wrapper\n      } else {\n        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n      }\n      // update the auto controls\n      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n    };\n\n    /**\n     * Appends image captions to the DOM\n     */\n    var appendCaptions = function() {\n      // cycle through each child\n      slider.children.each(function(index) {\n        // get the image title attribute\n        var title = $(this).find('img:first').attr('title');\n        // append the caption\n        if (title !== undefined && ('' + title).length) {\n          $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n        }\n      });\n    };\n\n    /**\n     * Click next binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickNextBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToNextSlide();\n    };\n\n    /**\n     * Click prev binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPrevBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToPrevSlide();\n    };\n\n    /**\n     * Click start binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStartBind = function(e) {\n      el.startAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click stop binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStopBind = function(e) {\n      el.stopAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click pager binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPagerBind = function(e) {\n      var pagerLink, pagerIndex;\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) {\n        return;\n      }\n      // if auto show is running, stop it\n      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      pagerLink = $(e.currentTarget);\n      if (pagerLink.attr('data-slide-index') !== undefined) {\n        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n        // if clicked pager link is not active, continue with the goToSlide call\n        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }\n      }\n    };\n\n    /**\n     * Updates the pager links with an active class\n     *\n     * @param slideIndex (int)\n     *  - index of slide to make active\n     */\n    var updatePagerActive = function(slideIndex) {\n      // if \"short\" pager type\n      var len = slider.children.length; // nb of children\n      if (slider.settings.pagerType === 'short') {\n        if (slider.settings.maxSlides > 1) {\n          len = Math.ceil(slider.children.length / slider.settings.maxSlides);\n        }\n        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n        return;\n      }\n      // remove all pager active classes\n      slider.pagerEl.find('a').removeClass('active');\n      // apply the active class for all pagers\n      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });\n    };\n\n    /**\n     * Performs needed actions after a slide transition\n     */\n    var updateAfterSlideTransition = function() {\n      // if infinite loop is true\n      if (slider.settings.infiniteLoop) {\n        var position = '';\n        // first slide\n        if (slider.active.index === 0) {\n          // set the new position\n          position = slider.children.eq(0).position();\n        // carousel, last slide\n        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {\n          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n        // last slide\n        } else if (slider.active.index === slider.children.length - 1) {\n          position = slider.children.eq(slider.children.length - 1).position();\n        }\n        if (position) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n      // declare that the transition is complete\n      slider.working = false;\n      // onSlideAfter callback\n      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n    };\n\n    /**\n     * Updates the auto controls state (either active, or combined switch)\n     *\n     * @param state (string) \"start\", \"stop\"\n     *  - the new state of the auto show\n     */\n    var updateAutoControls = function(state) {\n      // if autoControlsCombine is true, replace the current control with the new state\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.html(slider.controls[state]);\n      // if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n      } else {\n        slider.controls.autoEl.find('a').removeClass('active');\n        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n      }\n    };\n\n    /**\n     * Updates the direction controls (checks if either should be hidden)\n     */\n    var updateDirectionControls = function() {\n      if (getPagerQty() === 1) {\n        slider.controls.prev.addClass('disabled');\n        slider.controls.next.addClass('disabled');\n      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {\n        // if first slide\n        if (slider.active.index === 0) {\n          slider.controls.prev.addClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        // if last slide\n        } else if (slider.active.index === getPagerQty() - 1) {\n          slider.controls.next.addClass('disabled');\n          slider.controls.prev.removeClass('disabled');\n        // if any slide in the middle\n        } else {\n          slider.controls.prev.removeClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        }\n      }\n    };\n\n    /**\n     * Initializes the auto process\n     */\n    var initAuto = function() {\n      // if autoDelay was supplied, launch the auto show using a setTimeout() call\n      if (slider.settings.autoDelay > 0) {\n        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n      // if autoDelay was not supplied, start the auto show normally\n      } else {\n        el.startAuto();\n\n        //add focus and blur events to ensure its running if timeout gets paused\n        $(window).focus(function() {\n          el.startAuto();\n        }).blur(function() {\n          el.stopAuto();\n        });\n      }\n      // if autoHover is requested\n      if (slider.settings.autoHover) {\n        // on el hover\n        el.hover(function() {\n          // if the auto show is currently playing (has an active interval)\n          if (slider.interval) {\n            // stop the auto show and pass true argument which will prevent control update\n            el.stopAuto(true);\n            // create a new autoPaused value which will be used by the relative \"mouseout\" event\n            slider.autoPaused = true;\n          }\n        }, function() {\n          // if the autoPaused value was created be the prior \"mouseover\" event\n          if (slider.autoPaused) {\n            // start the auto show and pass true argument which will prevent control update\n            el.startAuto(true);\n            // reset the autoPaused value\n            slider.autoPaused = null;\n          }\n        });\n      }\n    };\n\n    /**\n     * Initializes the ticker process\n     */\n    var initTicker = function() {\n      var startPosition = 0,\n      position, transform, value, idx, ratio, property, newSpeed, totalDimens;\n      // if autoDirection is \"next\", append a clone of the entire slider\n      if (slider.settings.autoDirection === 'next') {\n        el.append(slider.children.clone().addClass('bx-clone'));\n      // if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n      } else {\n        el.prepend(slider.children.clone().addClass('bx-clone'));\n        position = slider.children.first().position();\n        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      }\n      setPositionProperty(startPosition, 'reset', 0);\n      // do not allow controls in ticker mode\n      slider.settings.pager = false;\n      slider.settings.controls = false;\n      slider.settings.autoControls = false;\n      // if autoHover is requested\n      if (slider.settings.tickerHover) {\n        if (slider.usingCSS) {\n          idx = slider.settings.mode === 'horizontal' ? 4 : 5;\n          slider.viewport.hover(function() {\n            transform = el.css('-' + slider.cssPrefix + '-transform');\n            value = parseFloat(transform.split(',')[idx]);\n            setPositionProperty(value, 'reset', 0);\n          }, function() {\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));\n            tickerLoop(newSpeed);\n          });\n        } else {\n          // on el hover\n          slider.viewport.hover(function() {\n            el.stop();\n          }, function() {\n            // calculate the total width of children (used to calculate the speed ratio)\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n            tickerLoop(newSpeed);\n          });\n        }\n      }\n      // start the ticker loop\n      tickerLoop();\n    };\n\n    /**\n     * Runs a continuous loop, news ticker-style\n     */\n    var tickerLoop = function(resumeSpeed) {\n      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,\n      position = {left: 0, top: 0},\n      reset = {left: 0, top: 0},\n      animateProperty, resetValue, params;\n\n      // if \"next\" animate left position to last child, then reset left to 0\n      if (slider.settings.autoDirection === 'next') {\n        position = el.find('.bx-clone').first().position();\n      // if \"prev\" animate left position to 0, then reset left to first non-clone child\n      } else {\n        reset = slider.children.first().position();\n      }\n      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;\n      params = {resetValue: resetValue};\n      setPositionProperty(animateProperty, 'ticker', speed, params);\n    };\n\n    /**\n     * Check if el is on screen\n     */\n    var isOnScreen = function(el) {\n      var win = $(window),\n      viewport = {\n        top: win.scrollTop(),\n        left: win.scrollLeft()\n      },\n      bounds = el.offset();\n\n      viewport.right = viewport.left + win.width();\n      viewport.bottom = viewport.top + win.height();\n      bounds.right = bounds.left + el.outerWidth();\n      bounds.bottom = bounds.top + el.outerHeight();\n\n      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));\n    };\n\n    /**\n     * Initializes keyboard events\n     */\n    var keyPress = function(e) {\n      var activeElementTag = document.activeElement.tagName.toLowerCase(),\n      tagFilters = 'input|textarea',\n      p = new RegExp(activeElementTag,['i']),\n      result = p.exec(tagFilters);\n\n      if (result == null && isOnScreen(el)) {\n        if (e.keyCode === 39) {\n          clickNextBind(e);\n          return false;\n        } else if (e.keyCode === 37) {\n          clickPrevBind(e);\n          return false;\n        }\n      }\n    };\n\n    /**\n     * Initializes touch events\n     */\n    var initTouch = function() {\n      // initialize object to contain all touch values\n      slider.touch = {\n        start: {x: 0, y: 0},\n        end: {x: 0, y: 0}\n      };\n      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);\n\n      //for browsers that have implemented pointer events and fire a click after\n      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not\n      slider.viewport.on('click', '.bxslider a', function(e) {\n        if (slider.viewport.hasClass('click-disabled')) {\n          e.preventDefault();\n          slider.viewport.removeClass('click-disabled');\n        }\n      });\n    };\n\n    /**\n     * Event handler for \"touchstart\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchStart = function(e) {\n      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls\n      slider.controls.el.addClass('disabled');\n\n      if (slider.working) {\n        e.preventDefault();\n        slider.controls.el.removeClass('disabled');\n      } else {\n        // record the original position when touch starts\n        slider.touch.originalPos = el.position();\n        var orig = e.originalEvent,\n        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];\n        // record the starting touch x, y coordinates\n        slider.touch.start.x = touchPoints[0].pageX;\n        slider.touch.start.y = touchPoints[0].pageY;\n\n        if (slider.viewport.get(0).setPointerCapture) {\n          slider.pointerId = orig.pointerId;\n          slider.viewport.get(0).setPointerCapture(slider.pointerId);\n        }\n        // bind a \"touchmove\" event to the viewport\n        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);\n        // bind a \"touchend\" event to the viewport\n        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);\n        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);\n      }\n    };\n\n    /**\n     * Cancel Pointer for Windows Phone\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onPointerCancel = function(e) {\n      /* onPointerCancel handler is needed to deal with situations when a touchend\n      doesn't fire after a touchstart (this happens on windows phones only) */\n      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);\n\n      //remove handlers\n      slider.controls.el.removeClass('disabled');\n      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Event handler for \"touchmove\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchMove = function(e) {\n      var orig = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      // if scrolling on y axis, do not prevent default\n      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),\n      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),\n      value = 0,\n      change = 0;\n\n      // x axis swipe\n      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {\n        e.preventDefault();\n      // y axis swipe\n      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {\n        e.preventDefault();\n      }\n      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {\n        // if horizontal, drag along x axis\n        if (slider.settings.mode === 'horizontal') {\n          change = touchPoints[0].pageX - slider.touch.start.x;\n          value = slider.touch.originalPos.left + change;\n        // if vertical, drag along y axis\n        } else {\n          change = touchPoints[0].pageY - slider.touch.start.y;\n          value = slider.touch.originalPos.top + change;\n        }\n        setPositionProperty(value, 'reset', 0);\n      }\n    };\n\n    /**\n     * Event handler for \"touchend\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchEnd = function(e) {\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      //enable slider controls as soon as user stops interacing with slides\n      slider.controls.el.removeClass('disabled');\n      var orig    = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      value       = 0,\n      distance    = 0;\n      // record end x, y positions\n      slider.touch.end.x = touchPoints[0].pageX;\n      slider.touch.end.y = touchPoints[0].pageY;\n      // if fade mode, check if absolute x distance clears the threshold\n      if (slider.settings.mode === 'fade') {\n        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n        if (distance >= slider.settings.swipeThreshold) {\n          if (slider.touch.start.x > slider.touch.end.x) {\n            el.goToNextSlide();\n          } else {\n            el.goToPrevSlide();\n          }\n          el.stopAuto();\n        }\n      // not fade mode\n      } else {\n        // calculate distance and el's animate property\n        if (slider.settings.mode === 'horizontal') {\n          distance = slider.touch.end.x - slider.touch.start.x;\n          value = slider.touch.originalPos.left;\n        } else {\n          distance = slider.touch.end.y - slider.touch.start.y;\n          value = slider.touch.originalPos.top;\n        }\n        // if not infinite loop and first / last slide, do not attempt a slide transition\n        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {\n          setPositionProperty(value, 'reset', 200);\n        } else {\n          // check if distance clears threshold\n          if (Math.abs(distance) >= slider.settings.swipeThreshold) {\n            if (distance < 0) {\n              el.goToNextSlide();\n            } else {\n              el.goToPrevSlide();\n            }\n            el.stopAuto();\n          } else {\n            // el.animate(property, 200);\n            setPositionProperty(value, 'reset', 200);\n          }\n        }\n      }\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Window resize event callback\n     */\n    var resizeWindow = function(e) {\n      // don't do anything if slider isn't initialized.\n      if (!slider.initialized) { return; }\n      // Delay if slider working.\n      if (slider.working) {\n        window.setTimeout(resizeWindow, 10);\n      } else {\n        // get the new window dimens (again, thank you IE)\n        var windowWidthNew = $(window).width(),\n        windowHeightNew = $(window).height();\n        // make sure that it is a true window resize\n        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n        // are resized. Can you just die already?*\n        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {\n          // set the new window dimens\n          windowWidth = windowWidthNew;\n          windowHeight = windowHeightNew;\n          // update all dynamic elements\n          el.redrawSlider();\n          // Call user resize handler\n          slider.settings.onSliderResize.call(el, slider.active.index);\n        }\n      }\n    };\n\n    /**\n     * Adds an aria-hidden=true attribute to each element\n     *\n     * @param startVisibleIndex (int)\n     *  - the first visible element's index\n     */\n    var applyAriaHiddenAttributes = function(startVisibleIndex) {\n      var numberOfSlidesShowing = getNumberSlidesShowing();\n      // only apply attributes if the setting is enabled and not in ticker mode\n      if (slider.settings.ariaHidden && !slider.settings.ticker) {\n        // add aria-hidden=true to all elements\n        slider.children.attr('aria-hidden', 'true');\n        // get the visible elements and change to aria-hidden=false\n        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');\n      }\n    };\n\n    /**\n     * Returns index according to present page range\n     *\n     * @param slideOndex (int)\n     *  - the desired slide index\n     */\n    var setSlideIndex = function(slideIndex) {\n      if (slideIndex < 0) {\n        if (slider.settings.infiniteLoop) {\n          return getPagerQty() - 1;\n        }else {\n          //we don't go to undefined slides\n          return slider.active.index;\n        }\n      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n      } else if (slideIndex >= getPagerQty()) {\n        if (slider.settings.infiniteLoop) {\n          return 0;\n        } else {\n          //we don't move to undefined pages\n          return slider.active.index;\n        }\n      // set active index to requested slide\n      } else {\n        return slideIndex;\n      }\n    };\n\n    /**\n     * ===================================================================================\n     * = PUBLIC FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Performs slide transition to the specified slide\n     *\n     * @param slideIndex (int)\n     *  - the destination slide's index (zero-based)\n     *\n     * @param direction (string)\n     *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n     */\n    el.goToSlide = function(slideIndex, direction) {\n      // onSlideBefore, onSlideNext, onSlidePrev callbacks\n      // Allow transition canceling based on returned value\n      var performTransition = true,\n      moveBy = 0,\n      position = {left: 0, top: 0},\n      lastChild = null,\n      lastShowingIndex, eq, value, requestEl;\n      // store the old index\n      slider.oldIndex = slider.active.index;\n      //set new index\n      slider.active.index = setSlideIndex(slideIndex);\n\n      // if plugin is currently in motion, ignore request\n      if (slider.working || slider.active.index === slider.oldIndex) { return; }\n      // declare that plugin is in motion\n      slider.working = true;\n\n      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\n      // If transitions canceled, reset and return\n      if (typeof (performTransition) !== 'undefined' && !performTransition) {\n        slider.active.index = slider.oldIndex; // restore old index\n        slider.working = false; // is not in motion\n        return;\n      }\n\n      if (direction === 'next') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      } else if (direction === 'prev') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      }\n\n      // check if last slide\n      slider.active.last = slider.active.index >= getPagerQty() - 1;\n      // update the pager with active class\n      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }\n      // // check for direction control update\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if slider is set to mode: \"fade\"\n      if (slider.settings.mode === 'fade') {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // fade out the visible child and reset its z-index value\n        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n        // fade in the newly requested slide\n        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {\n          $(this).css('zIndex', slider.settings.slideZIndex);\n          updateAfterSlideTransition();\n        });\n      // slider mode is not \"fade\"\n      } else {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // if carousel and not infinite loop\n        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {\n          if (slider.settings.mode === 'horizontal') {\n            // get the last child position\n            lastChild = slider.children.eq(slider.children.length - 1);\n            position = lastChild.position();\n            // calculate the position of the last slide\n            moveBy = slider.viewport.width() - lastChild.outerWidth();\n          } else {\n            // get last showing index position\n            lastShowingIndex = slider.children.length - slider.settings.minSlides;\n            position = slider.children.eq(lastShowingIndex).position();\n          }\n          // horizontal carousel, going previous while on first slide (infiniteLoop mode)\n        } else if (slider.carousel && slider.active.last && direction === 'prev') {\n          // get the last child position\n          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n          lastChild = el.children('.bx-clone').eq(eq);\n          position = lastChild.position();\n        // if infinite loop and \"Next\" is clicked on the last slide\n        } else if (direction === 'next' && slider.active.index === 0) {\n          // get the last clone position\n          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n          slider.active.last = false;\n        // normal non-zero requests\n        } else if (slideIndex >= 0) {\n          //parseInt is applied to allow floats for slides/page\n          requestEl = slideIndex * parseInt(getMoveBy());\n          position = slider.children.eq(requestEl).position();\n        }\n\n        /* If the position doesn't exist\n         * (e.g. if you destroy the slider on a next click),\n         * it doesn't throw an error.\n         */\n        if (typeof (position) !== 'undefined') {\n          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;\n          // plugin values to be animated\n          setPositionProperty(value, 'slide', slider.settings.speed);\n        } else {\n          slider.working = false;\n        }\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Transitions to the next slide in the show\n     */\n    el.goToNextSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.last) { return; }\n      var pagerIndex = parseInt(slider.active.index) + 1;\n      el.goToSlide(pagerIndex, 'next');\n    };\n\n    /**\n     * Transitions to the prev slide in the show\n     */\n    el.goToPrevSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }\n      var pagerIndex = parseInt(slider.active.index) - 1;\n      el.goToSlide(pagerIndex, 'prev');\n    };\n\n    /**\n     * Starts the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.startAuto = function(preventControlUpdate) {\n      // if an interval already exists, disregard call\n      if (slider.interval) { return; }\n      // create an interval\n      slider.interval = setInterval(function() {\n        if (slider.settings.autoDirection === 'next') {\n          el.goToNextSlide();\n        } else {\n          el.goToPrevSlide();\n        }\n      }, slider.settings.pause);\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }\n    };\n\n    /**\n     * Stops the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.stopAuto = function(preventControlUpdate) {\n      // if no interval exists, disregard call\n      if (!slider.interval) { return; }\n      // clear the interval\n      clearInterval(slider.interval);\n      slider.interval = null;\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }\n    };\n\n    /**\n     * Returns current slide index (zero-based)\n     */\n    el.getCurrentSlide = function() {\n      return slider.active.index;\n    };\n\n    /**\n     * Returns current slide element\n     */\n    el.getCurrentSlideElement = function() {\n      return slider.children.eq(slider.active.index);\n    };\n\n    /**\n     * Returns a slide element\n     * @param index (int)\n     *  - The index (zero-based) of the element you want returned.\n     */\n    el.getSlideElement = function(index) {\n      return slider.children.eq(index);\n    };\n\n    /**\n     * Returns number of slides in show\n     */\n    el.getSlideCount = function() {\n      return slider.children.length;\n    };\n\n    /**\n     * Return slider.working variable\n     */\n    el.isWorking = function() {\n      return slider.working;\n    };\n\n    /**\n     * Update all dynamic slider elements\n     */\n    el.redrawSlider = function() {\n      // resize all children in ratio to new screen size\n      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());\n      // adjust the height\n      slider.viewport.css('height', getViewportHeight());\n      // update the slide position\n      if (!slider.settings.ticker) { setSlidePosition(); }\n      // if active.last was true before the screen resize, we want\n      // to keep it last no matter what screen size we end on\n      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }\n      // if the active index (page) no longer exists due to the resize, simply set the index as last\n      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }\n      // if a pager is being displayed and a custom pager is not being used, update it\n      if (slider.settings.pager && !slider.settings.pagerCustom) {\n        populatePager();\n        updatePagerActive(slider.active.index);\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Destroy the current instance of the slider (revert everything back to original state)\n     */\n    el.destroySlider = function() {\n      // don't do anything if slider has already been destroyed\n      if (!slider.initialized) { return; }\n      slider.initialized = false;\n      $('.bx-clone', this).remove();\n      slider.children.each(function() {\n        if ($(this).data('origStyle') !== undefined) {\n          $(this).attr('style', $(this).data('origStyle'));\n        } else {\n          $(this).removeAttr('style');\n        }\n      });\n      if ($(this).data('origStyle') !== undefined) {\n        this.attr('style', $(this).data('origStyle'));\n      } else {\n        $(this).removeAttr('style');\n      }\n      $(this).unwrap().unwrap();\n      if (slider.controls.el) { slider.controls.el.remove(); }\n      if (slider.controls.next) { slider.controls.next.remove(); }\n      if (slider.controls.prev) { slider.controls.prev.remove(); }\n      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }\n      $('.bx-caption', this).remove();\n      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }\n      clearInterval(slider.interval);\n      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }\n      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }\n      //remove self reference in data\n      $(this).removeData('bxSlider');\n    };\n\n    /**\n     * Reload the slider (revert all DOM changes, and re-initialize)\n     */\n    el.reloadSlider = function(settings) {\n      if (settings !== undefined) { options = settings; }\n      el.destroySlider();\n      init();\n      //store reference to self in order to access public functions later\n      $(el).data('bxSlider', this);\n    };\n\n    init();\n\n    $(el).data('bxSlider', this);\n\n    // returns the current jQuery object\n    return this;\n  };\n\n})(jQuery);\n","/*!\n * Collapsible.js v1.2.0\n * https://github.com/jordnkr/collapsible\n *\n * Copyright 2017, Jordan Ruedy\n * This content is released under the MIT license\n * http://opensource.org/licenses/MIT\n */\n\n(function ($, undefined) {\n    $.fn.collapsible = function (options) {\n//////////////////////\n        var defaults = {\n            accordion: false,\n            accordionUpSpeed: 400,\n            accordionDownSpeed: 400,\n            collapseSpeed: 400,\n            contentOpen: null,\n            arrowRclass: 'arrow-r',\n            arrowDclass: 'arrow-d',\n            animate: true\n\n        };\n\n        var settings = $.extend(defaults, options);\n\n        return this.each(function () {\n            if (settings.animate === false) {\n                settings.accordionUpSpeed = 0;\n                settings.accordionDownSpeed = 0;\n                settings.collapseSpeed = 0;\n            }\n            var $thisEven = $(this).children(':even');\n            var $thisOdd = $(this).children(':odd');\n            var accord = 'accordion-active';\n            $(this).children(':nth-child(even)').css('display', 'none');\n            // $(this).toggleClass('special');\n            if (settings.accordion === true) {\n                if (settings.contentOpen !== null) {\n                    console.log(1);\n\n                    $($thisOdd[settings.contentOpen]).show().addClass(accord);\n\n                    $(this).children(':first-child').toggleClass('special');\n                    // $(this).children(':first-child').css(\"margin-bottom\", \"0px\");\n\n                }\n                $($thisEven).click(function () {\n                    if ($(this).next().attr('class') === (accord)) {\n                        $(this).next().slideUp(settings.accordionUpSpeed).removeClass(accord);\n\n                        console.log(2);\n\n                        $(this).toggleClass('special');\n                        // $(\".panel-head\").css(\"margin-bottom\", \"10px\");\n                    } else {\n                        // $(\".panel-head\").css(\"margin-bottom\", \"10px\");\n                        // $(this).css(\"margin-bottom\", \"0px\");\n                        $(\".panel-head\").removeClass('special');\n                        $($thisOdd).slideUp(settings.accordionUpSpeed).removeClass(accord);\n                        console.log(3);\n                        console.log($(this));\n\n\n                        $(this).next().slideDown(settings.accordionDownSpeed).addClass(accord);\n                        $(this).toggleClass('special');\n\n\n                    }\n                });\n            } else {\n                if (settings.contentOpen !== null) {\n                    if (Array.isArray(settings.contentOpen)) {\n                        for (var i = 0; i < settings.contentOpen.length; i++) {\n                            var index = settings.contentOpen[i];\n                            // $($thisEven[index]).children(':first-child').toggleClass(settings.arrowRclass + ' ' + settings.arrowDclass);\n                            console.log(4);\n                            $($thisOdd[index]).show();\n                        }\n                    } else {\n                        // $($thisEven[settings.contentOpen]).children(':first-child').toggleClass(settings.arrowRclass + ' ' + settings.arrowDclass);\n                        $($thisOdd[settings.contentOpen]).show();\n                    }\n                }\n                $($thisEven).click(function () {\n                    console.log(5);\n                    // $(this).children(':first-child').toggleClass(settings.arrowRclass + ' ' + settings.arrowDclass);\n\n                    $(this).next().slideToggle(settings.collapseSpeed);\n                });\n            }\n        });\n    };\n\n})(jQuery);\n","(function ($) {\n\n    $.fn.customScrollbar = function (options, args) {\n\n        var defaultOptions = {\n            skin: undefined,\n            hScroll: true,\n            vScroll: true,\n            updateOnWindowResize: false,\n            animationSpeed: 300,\n            onCustomScroll: undefined,\n            swipeSpeed: 1,\n            wheelSpeed: 40,\n            fixedThumbWidth: undefined,\n            fixedThumbHeight: undefined\n        }\n\n        var Scrollable = function (element, options) {\n            this.$element = $(element);\n            this.options = options;\n            this.addScrollableClass();\n            this.addSkinClass();\n            this.addScrollBarComponents();\n            if (this.options.vScroll)\n                this.vScrollbar = new Scrollbar(this, new VSizing());\n            if (this.options.hScroll)\n                this.hScrollbar = new Scrollbar(this, new HSizing());\n            this.$element.data(\"scrollable\", this);\n            this.initKeyboardScrolling();\n            this.bindEvents();\n        }\n\n        Scrollable.prototype = {\n\n            addScrollableClass: function () {\n                if (!this.$element.hasClass(\"scrollable\")) {\n                    this.scrollableAdded = true;\n                    this.$element.addClass(\"scrollable\");\n                }\n            },\n\n            removeScrollableClass: function () {\n                if (this.scrollableAdded)\n                    this.$element.removeClass(\"scrollable\");\n            },\n\n            addSkinClass: function () {\n                if (typeof(this.options.skin) == \"string\" && !this.$element.hasClass(this.options.skin)) {\n                    this.skinClassAdded = true;\n                    this.$element.addClass(this.options.skin);\n                }\n            },\n\n            removeSkinClass: function () {\n                if (this.skinClassAdded)\n                    this.$element.removeClass(this.options.skin);\n            },\n\n            addScrollBarComponents: function () {\n                this.assignViewPort();\n                if (this.$viewPort.length == 0) {\n                    this.$element.wrapInner(\"<div class=\\\"viewport\\\" />\");\n                    this.assignViewPort();\n                    this.viewPortAdded = true;\n                }\n                this.assignOverview();\n                if (this.$overview.length == 0) {\n                    this.$viewPort.wrapInner(\"<div class=\\\"overview\\\" />\");\n                    this.assignOverview();\n                    this.overviewAdded = true;\n                }\n                this.addScrollBar(\"vertical\", \"prepend\");\n                this.addScrollBar(\"horizontal\", \"append\");\n            },\n\n            removeScrollbarComponents: function () {\n                this.removeScrollbar(\"vertical\");\n                this.removeScrollbar(\"horizontal\");\n                if (this.overviewAdded)\n                    this.$element.unwrap();\n                if (this.viewPortAdded)\n                    this.$element.unwrap();\n            },\n\n            removeScrollbar: function (orientation) {\n                if (this[orientation + \"ScrollbarAdded\"])\n                    this.$element.find(\".scroll-bar.\" + orientation).remove();\n            },\n\n            assignViewPort: function () {\n                this.$viewPort = this.$element.find(\".viewport\");\n            },\n\n            assignOverview: function () {\n                this.$overview = this.$viewPort.find(\".overview\");\n            },\n\n            addScrollBar: function (orientation, fun) {\n                if (this.$element.find(\".scroll-bar.\" + orientation).length == 0) {\n                    this.$element[fun](\"<div class='scroll-bar \" + orientation + \"'><div class='thumb'></div></div>\")\n                    this[orientation + \"ScrollbarAdded\"] = true;\n                }\n            },\n\n            resize: function (keepPosition) {\n                if (this.vScrollbar)\n                    this.vScrollbar.resize(keepPosition);\n                if (this.hScrollbar)\n                    this.hScrollbar.resize(keepPosition);\n            },\n\n            scrollTo: function (element) {\n                if (this.vScrollbar)\n                    this.vScrollbar.scrollToElement(element);\n                if (this.hScrollbar)\n                    this.hScrollbar.scrollToElement(element);\n            },\n\n            scrollToXY: function (x, y) {\n                this.scrollToX(x);\n                this.scrollToY(y);\n            },\n\n            scrollToX: function (x) {\n                if (this.hScrollbar)\n                    this.hScrollbar.scrollOverviewTo(x, true);\n            },\n\n            scrollToY: function (y) {\n                if (this.vScrollbar)\n                    this.vScrollbar.scrollOverviewTo(y, true);\n            },\n\n            remove: function () {\n                this.removeScrollableClass();\n                this.removeSkinClass();\n                this.removeScrollbarComponents();\n                this.$element.data(\"scrollable\", null);\n                this.removeKeyboardScrolling();\n                if (this.vScrollbar)\n                    this.vScrollbar.remove();\n                if (this.hScrollbar)\n                    this.hScrollbar.remove();\n            },\n\n            setAnimationSpeed: function (speed) {\n                this.options.animationSpeed = speed;\n            },\n\n            isInside: function (element, wrappingElement) {\n                var $element = $(element);\n                var $wrappingElement = $(wrappingElement);\n                var elementOffset = $element.offset();\n                var wrappingElementOffset = $wrappingElement.offset();\n                return (elementOffset.top >= wrappingElementOffset.top) && (elementOffset.left >= wrappingElementOffset.left) &&\n                    (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height()) &&\n                    (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width())\n            },\n\n            initKeyboardScrolling: function () {\n                var _this = this;\n\n                this.elementKeydown = function (event) {\n                    if (document.activeElement === _this.$element[0]) {\n                        if (_this.vScrollbar)\n                            _this.vScrollbar.keyScroll(event);\n                        if (_this.hScrollbar)\n                            _this.hScrollbar.keyScroll(event);\n                    }\n                }\n\n                this.$element\n                    .attr('tabindex', '-1')\n                    .keydown(this.elementKeydown);\n            },\n\n            removeKeyboardScrolling: function () {\n                this.$element\n                    .removeAttr('tabindex')\n                    .unbind(\"keydown\", this.elementKeydown);\n            },\n\n            bindEvents: function () {\n                if (this.options.onCustomScroll)\n                    this.$element.on(\"customScroll\", this.options.onCustomScroll);\n            }\n\n        }\n\n        var Scrollbar = function (scrollable, sizing) {\n            this.scrollable = scrollable;\n            this.sizing = sizing\n            this.$scrollBar = this.sizing.scrollBar(this.scrollable.$element);\n            this.$thumb = this.$scrollBar.find(\".thumb\");\n            this.setScrollPosition(0, 0);\n            this.resize();\n            this.initMouseMoveScrolling();\n            this.initMouseWheelScrolling();\n            this.initTouchScrolling();\n            this.initMouseClickScrolling();\n            this.initWindowResize();\n        }\n\n        Scrollbar.prototype = {\n\n            resize: function (keepPosition) {\n                this.scrollable.$viewPort.height(this.scrollable.$element.height());\n                this.sizing.size(this.scrollable.$viewPort, this.sizing.size(this.scrollable.$element));\n                this.viewPortSize = this.sizing.size(this.scrollable.$viewPort);\n                this.overviewSize = this.sizing.size(this.scrollable.$overview);\n                this.ratio = this.viewPortSize / this.overviewSize;\n                this.sizing.size(this.$scrollBar, this.viewPortSize);\n                this.thumbSize = this.calculateThumbSize();\n                this.sizing.size(this.$thumb, this.thumbSize);\n                this.maxThumbPosition = this.calculateMaxThumbPosition();\n                this.maxOverviewPosition = this.calculateMaxOverviewPosition();\n                this.enabled = (this.overviewSize > this.viewPortSize);\n                if (this.scrollPercent === undefined)\n                    this.scrollPercent = 0.0;\n                if (this.enabled)\n                    this.rescroll(keepPosition);\n                else\n                    this.setScrollPosition(0, 0);\n                this.$scrollBar.toggle(this.enabled);\n            },\n\n            calculateThumbSize: function () {\n                var fixedSize = this.sizing.fixedThumbSize(this.scrollable.options)\n                var size;\n                if (fixedSize)\n                    size = fixedSize;\n                else\n                    size = this.ratio * this.viewPortSize\n                return Math.max(size, this.sizing.minSize(this.$thumb));\n            },\n\n            initMouseMoveScrolling: function () {\n                var _this = this;\n                this.$thumb.mousedown(function (event) {\n                    if (_this.enabled)\n                        _this.startMouseMoveScrolling(event);\n                });\n                this.documentMouseup = function (event) {\n                    _this.stopMouseMoveScrolling(event);\n                };\n                $(document).mouseup(this.documentMouseup);\n                this.documentMousemove = function (event) {\n                    _this.mouseMoveScroll(event);\n                };\n                $(document).mousemove(this.documentMousemove);\n                this.$thumb.click(function (event) {\n                    event.stopPropagation();\n                });\n            },\n\n            removeMouseMoveScrolling: function () {\n                this.$thumb.unbind();\n                $(document).unbind(\"mouseup\", this.documentMouseup);\n                $(document).unbind(\"mousemove\", this.documentMousemove);\n            },\n\n            initMouseWheelScrolling: function () {\n                var _this = this;\n                this.scrollable.$element.mousewheel(function (event, delta, deltaX, deltaY) {\n                    if (_this.enabled) {\n                        if (_this.mouseWheelScroll(deltaX, deltaY)) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                    }\n                });\n            },\n\n            removeMouseWheelScrolling: function () {\n                this.scrollable.$element.unbind(\"mousewheel\");\n            },\n\n            initTouchScrolling: function () {\n                if (document.addEventListener) {\n                    var _this = this;\n                    this.elementTouchstart = function (event) {\n                        if (_this.enabled)\n                            _this.startTouchScrolling(event);\n                    }\n                    this.scrollable.$element[0].addEventListener(\"touchstart\", this.elementTouchstart);\n                    this.documentTouchmove = function (event) {\n                        _this.touchScroll(event);\n                    }\n                    document.addEventListener(\"touchmove\", this.documentTouchmove);\n                    this.elementTouchend = function (event) {\n                        _this.stopTouchScrolling(event);\n                    }\n                    this.scrollable.$element[0].addEventListener(\"touchend\", this.elementTouchend);\n                }\n            },\n\n            removeTouchScrolling: function () {\n                if (document.addEventListener) {\n                    this.scrollable.$element[0].removeEventListener(\"touchstart\", this.elementTouchstart);\n                    document.removeEventListener(\"touchmove\", this.documentTouchmove);\n                    this.scrollable.$element[0].removeEventListener(\"touchend\", this.elementTouchend);\n                }\n            },\n\n            initMouseClickScrolling: function () {\n                var _this = this;\n                this.scrollBarClick = function (event) {\n                    _this.mouseClickScroll(event);\n                };\n                this.$scrollBar.click(this.scrollBarClick);\n            },\n\n            removeMouseClickScrolling: function () {\n                this.$scrollBar.unbind(\"click\", this.scrollBarClick);\n            },\n\n            initWindowResize: function () {\n                if (this.scrollable.options.updateOnWindowResize) {\n                    var _this = this;\n                    this.windowResize = function () {\n                        _this.resize();\n                    };\n                    $(window).resize(this.windowResize);\n                }\n            },\n\n            removeWindowResize: function () {\n                $(window).unbind(\"resize\", this.windowResize);\n            },\n\n            isKeyScrolling: function (key) {\n                return this.keyScrollDelta(key) != null;\n            },\n\n            keyScrollDelta: function (key) {\n                for (var scrollingKey in this.sizing.scrollingKeys)\n                    if (scrollingKey == key)\n                        return this.sizing.scrollingKeys[key](this.viewPortSize);\n                return null;\n            },\n\n            startMouseMoveScrolling: function (event) {\n                this.mouseMoveScrolling = true;\n                $(\"html\").addClass(\"not-selectable\");\n                this.setUnselectable($(\"html\"), \"on\");\n                this.setScrollEvent(event);\n            },\n\n            stopMouseMoveScrolling: function (event) {\n                this.mouseMoveScrolling = false;\n                $(\"html\").removeClass(\"not-selectable\");\n                this.setUnselectable($(\"html\"), null);\n            },\n\n            setUnselectable: function (element, value) {\n                if (element.attr(\"unselectable\") != value) {\n                    element.attr(\"unselectable\", value);\n                    element.find(':not(input)').attr('unselectable', value);\n                }\n            },\n\n            mouseMoveScroll: function (event) {\n                if (this.mouseMoveScrolling) {\n                    var delta = this.sizing.mouseDelta(this.scrollEvent, event);\n                    this.scrollThumbBy(delta);\n                    this.setScrollEvent(event);\n                }\n            },\n\n            startTouchScrolling: function (event) {\n                if (event.touches && event.touches.length == 1) {\n                    this.setScrollEvent(event.touches[0]);\n                    this.touchScrolling = true;\n                    event.stopPropagation();\n                }\n            },\n\n            touchScroll: function (event) {\n                if (this.touchScrolling && event.touches && event.touches.length == 1) {\n                    var delta = -this.sizing.mouseDelta(this.scrollEvent, event.touches[0]) * this.scrollable.options.swipeSpeed;\n                    var scrolled = this.scrollOverviewBy(delta);\n                    if (scrolled) {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        this.setScrollEvent(event.touches[0]);\n                    }\n                }\n            },\n\n            stopTouchScrolling: function (event) {\n                this.touchScrolling = false;\n                event.stopPropagation();\n            },\n\n            mouseWheelScroll: function (deltaX, deltaY) {\n                var delta = -this.sizing.wheelDelta(deltaX, deltaY) * this.scrollable.options.wheelSpeed;\n                if (delta != 0)\n                    return this.scrollOverviewBy(delta);\n            },\n\n            mouseClickScroll: function (event) {\n                var delta = this.viewPortSize - 20;\n                if (event[\"page\" + this.sizing.scrollAxis()] < this.$thumb.offset()[this.sizing.offsetComponent()])\n                // mouse click over thumb\n                    delta = -delta;\n                this.scrollOverviewBy(delta);\n            },\n\n            keyScroll: function (event) {\n                var keyDown = event.which;\n                if (this.enabled && this.isKeyScrolling(keyDown)) {\n                    if (this.scrollOverviewBy(this.keyScrollDelta(keyDown)))\n                        event.preventDefault();\n                }\n            },\n\n            scrollThumbBy: function (delta) {\n                var thumbPosition = this.thumbPosition();\n                thumbPosition += delta;\n                thumbPosition = this.positionOrMax(thumbPosition, this.maxThumbPosition);\n                var oldScrollPercent = this.scrollPercent;\n                this.scrollPercent = thumbPosition / this.maxThumbPosition;\n                var overviewPosition = (thumbPosition * this.maxOverviewPosition) / this.maxThumbPosition;\n                this.setScrollPosition(overviewPosition, thumbPosition);\n                if (oldScrollPercent != this.scrollPercent) {\n                    this.triggerCustomScroll(oldScrollPercent);\n                    return true\n                }\n                else\n                    return false;\n            },\n\n            thumbPosition: function () {\n                return this.$thumb.position()[this.sizing.offsetComponent()];\n            },\n\n            scrollOverviewBy: function (delta) {\n                var overviewPosition = this.overviewPosition() + delta;\n                return this.scrollOverviewTo(overviewPosition, false);\n            },\n\n            overviewPosition: function () {\n                return -this.scrollable.$overview.position()[this.sizing.offsetComponent()];\n            },\n\n            scrollOverviewTo: function (overviewPosition, animate) {\n                overviewPosition = this.positionOrMax(overviewPosition, this.maxOverviewPosition);\n                var oldScrollPercent = this.scrollPercent;\n                this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n                var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n                if (animate)\n                    this.setScrollPositionWithAnimation(overviewPosition, thumbPosition);\n                else\n                    this.setScrollPosition(overviewPosition, thumbPosition);\n                if (oldScrollPercent != this.scrollPercent) {\n                    this.triggerCustomScroll(oldScrollPercent);\n                    return true;\n                }\n                else\n                    return false;\n            },\n\n            positionOrMax: function (p, max) {\n                if (p < 0)\n                    return 0;\n                else if (p > max)\n                    return max;\n                else\n                    return p;\n            },\n\n            triggerCustomScroll: function (oldScrollPercent) {\n                this.scrollable.$element.trigger(\"customScroll\", {\n                        scrollAxis: this.sizing.scrollAxis(),\n                        direction: this.sizing.scrollDirection(oldScrollPercent, this.scrollPercent),\n                        scrollPercent: this.scrollPercent * 100\n                    }\n                );\n            },\n\n            rescroll: function (keepPosition) {\n                if (keepPosition) {\n                    var overviewPosition = this.positionOrMax(this.overviewPosition(), this.maxOverviewPosition);\n                    this.scrollPercent = overviewPosition / this.maxOverviewPosition;\n                    var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n                    this.setScrollPosition(overviewPosition, thumbPosition);\n                }\n                else {\n                    var thumbPosition = this.scrollPercent * this.maxThumbPosition;\n                    var overviewPosition = this.scrollPercent * this.maxOverviewPosition;\n                    this.setScrollPosition(overviewPosition, thumbPosition);\n                }\n            },\n\n            setScrollPosition: function (overviewPosition, thumbPosition) {\n                this.$thumb.css(this.sizing.offsetComponent(), thumbPosition + \"px\");\n                this.scrollable.$overview.css(this.sizing.offsetComponent(), -overviewPosition + \"px\");\n            },\n\n            setScrollPositionWithAnimation: function (overviewPosition, thumbPosition) {\n                var thumbAnimationOpts = {};\n                var overviewAnimationOpts = {};\n                thumbAnimationOpts[this.sizing.offsetComponent()] = thumbPosition + \"px\";\n                this.$thumb.animate(thumbAnimationOpts, this.scrollable.options.animationSpeed);\n                overviewAnimationOpts[this.sizing.offsetComponent()] = -overviewPosition + \"px\";\n                this.scrollable.$overview.animate(overviewAnimationOpts, this.scrollable.options.animationSpeed);\n            },\n\n            calculateMaxThumbPosition: function () {\n                return this.sizing.size(this.$scrollBar) - this.thumbSize;\n            },\n\n            calculateMaxOverviewPosition: function () {\n                return this.sizing.size(this.scrollable.$overview) - this.sizing.size(this.scrollable.$viewPort);\n            },\n\n            setScrollEvent: function (event) {\n                var attr = \"page\" + this.sizing.scrollAxis();\n                if (!this.scrollEvent || this.scrollEvent[attr] != event[attr])\n                    this.scrollEvent = {pageX: event.pageX, pageY: event.pageY};\n            },\n\n            scrollToElement: function (element) {\n                var $element = $(element);\n                if (this.sizing.isInside($element, this.scrollable.$overview) && !this.sizing.isInside($element, this.scrollable.$viewPort)) {\n                    var elementOffset = $element.offset();\n                    var overviewOffset = this.scrollable.$overview.offset();\n                    var viewPortOffset = this.scrollable.$viewPort.offset();\n                    this.scrollOverviewTo(elementOffset[this.sizing.offsetComponent()] - overviewOffset[this.sizing.offsetComponent()], true);\n                }\n            },\n\n            remove: function () {\n                this.removeMouseMoveScrolling();\n                this.removeMouseWheelScrolling();\n                this.removeTouchScrolling();\n                this.removeMouseClickScrolling();\n                this.removeWindowResize();\n            }\n\n        }\n\n        var HSizing = function () {\n        }\n\n        HSizing.prototype = {\n            size: function ($el, arg) {\n                if (arg)\n                    return $el.width(arg);\n                else\n                    return $el.width();\n            },\n\n            minSize: function ($el) {\n                return parseInt($el.css(\"min-width\")) || 0;\n            },\n\n            fixedThumbSize: function (options) {\n                return options.fixedThumbWidth;\n            },\n\n            scrollBar: function ($el) {\n                return $el.find(\".scroll-bar.horizontal\");\n            },\n\n            mouseDelta: function (event1, event2) {\n                return event2.pageX - event1.pageX;\n            },\n\n            offsetComponent: function () {\n                return \"left\";\n            },\n\n            wheelDelta: function (deltaX, deltaY) {\n                return deltaX;\n            },\n\n            scrollAxis: function () {\n                return \"X\";\n            },\n\n            scrollDirection: function (oldPercent, newPercent) {\n                return oldPercent < newPercent ? \"right\" : \"left\";\n            },\n\n            scrollingKeys: {\n                37: function (viewPortSize) {\n                    return -10; //arrow left\n                },\n                39: function (viewPortSize) {\n                    return 10; //arrow right\n                }\n            },\n\n            isInside: function (element, wrappingElement) {\n                var $element = $(element);\n                var $wrappingElement = $(wrappingElement);\n                var elementOffset = $element.offset();\n                var wrappingElementOffset = $wrappingElement.offset();\n                return (elementOffset.left >= wrappingElementOffset.left) &&\n                    (elementOffset.left + $element.width() <= wrappingElementOffset.left + $wrappingElement.width());\n            }\n\n        }\n\n        var VSizing = function () {\n        }\n\n        VSizing.prototype = {\n\n            size: function ($el, arg) {\n                if (arg)\n                    return $el.height(arg);\n                else\n                    return $el.height();\n            },\n\n            minSize: function ($el) {\n                return parseInt($el.css(\"min-height\")) || 0;\n            },\n\n            fixedThumbSize: function (options) {\n                return options.fixedThumbHeight;\n            },\n\n            scrollBar: function ($el) {\n                return $el.find(\".scroll-bar.vertical\");\n            },\n\n            mouseDelta: function (event1, event2) {\n                return event2.pageY - event1.pageY;\n            },\n\n            offsetComponent: function () {\n                return \"top\";\n            },\n\n            wheelDelta: function (deltaX, deltaY) {\n                return deltaY;\n            },\n\n            scrollAxis: function () {\n                return \"Y\";\n            },\n\n            scrollDirection: function (oldPercent, newPercent) {\n                return oldPercent < newPercent ? \"down\" : \"up\";\n            },\n\n            scrollingKeys: {\n                38: function (viewPortSize) {\n                    return -10; //arrow up\n                },\n                40: function (viewPortSize) {\n                    return 10; //arrow down\n                },\n                33: function (viewPortSize) {\n                    return -(viewPortSize - 20); //page up\n                },\n                34: function (viewPortSize) {\n                    return viewPortSize - 20; //page down\n                }\n            },\n\n            isInside: function (element, wrappingElement) {\n                var $element = $(element);\n                var $wrappingElement = $(wrappingElement);\n                var elementOffset = $element.offset();\n                var wrappingElementOffset = $wrappingElement.offset();\n                return (elementOffset.top >= wrappingElementOffset.top) &&\n                    (elementOffset.top + $element.height() <= wrappingElementOffset.top + $wrappingElement.height());\n            }\n\n        }\n\n        return this.each(function () {\n            if (options == undefined)\n                options = defaultOptions;\n            if (typeof(options) == \"string\") {\n                var scrollable = $(this).data(\"scrollable\");\n                if (scrollable)\n                    scrollable[options](args);\n            }\n            else if (typeof(options) == \"object\") {\n                options = $.extend(defaultOptions, options);\n                new Scrollable($(this), options);\n            }\n            else\n                throw \"Invalid type of options\";\n        });\n\n    }\n    ;\n\n})\n(jQuery);\n\n(function ($) {\n\n    var types = ['DOMMouseScroll', 'mousewheel'];\n\n    if ($.event.fixHooks) {\n        for (var i = types.length; i;) {\n            $.event.fixHooks[types[--i]] = $.event.mouseHooks;\n        }\n    }\n\n    $.event.special.mousewheel = {\n        setup: function () {\n            if (this.addEventListener) {\n                for (var i = types.length; i;) {\n                    this.addEventListener(types[--i], handler, false);\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n        },\n\n        teardown: function () {\n            if (this.removeEventListener) {\n                for (var i = types.length; i;) {\n                    this.removeEventListener(types[--i], handler, false);\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function (fn) {\n            return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n        },\n\n        unmousewheel: function (fn) {\n            return this.unbind(\"mousewheel\", fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent = event || window.event, args = [].slice.call(arguments, 1), delta = 0, returnValue = true,\n            deltaX = 0, deltaY = 0;\n        event = $.event.fix(orgEvent);\n        event.type = \"mousewheel\";\n\n        // Old school scrollwheel delta\n        if (orgEvent.wheelDelta) {\n            delta = orgEvent.wheelDelta / 120;\n        }\n        if (orgEvent.detail) {\n            delta = -orgEvent.detail / 3;\n        }\n\n        // New school multidimensional scroll (touchpads) deltas\n        deltaY = delta;\n\n        // Gecko\n        if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {\n            deltaY = 0;\n            deltaX = delta;\n        }\n\n        // Webkit\n        if (orgEvent.wheelDeltaY !== undefined) {\n            deltaY = orgEvent.wheelDeltaY / 120;\n        }\n        if (orgEvent.wheelDeltaX !== undefined) {\n            deltaX = orgEvent.wheelDeltaX / 120;\n        }\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n})(jQuery);\n","// $(function () {\n//\n//     $(\".accordion-button\").click(function () {\n//\n//         var panels = $('.accordion-panel');\n//         for (var i = 0; i < panels.length; i++) {\n//             panels[i].style.maxHeight = null;\n//         }\n//         var panel = this.nextElementSibling;\n//         console.log(panel);\n//         if (panel.classList.contains(\"active-panel\")) {\n//             panel.style.maxHeight = null;\n//             panel.classList.remove('active-panel');\n//             console.log('kek');\n//         } else {\n//             panel.style.maxHeight = panel.scrollHeight + \"px\";\n//             panel.classList.add('active-panel');\n//         }\n//     });\n// });\n$(function () {\n    // $(\".accordion-button\").click(function () {\n    //     var panels = $('.accordion-panel');\n    //     var panel = this.nextElementSibling;\n    //     if (panel.style.height !== \"\") {\n    //         // for (var i = 0; i < panels.length; i++) {\n    //         //         panels[i].style.maxHeight = null;}\n    //         panel.style.height = null;\n    //     } else {\n    //         for (var i = 0; i < panels.length; i++) {\n    //                 panels[i].style.height = null;\n    //         }\n    //         panel.style.height = \"50px\";\n    //     }\n    // var menu=document.getElementsByClassName('icon-menu')[0];\n\n    // var icon_menu = $('.icon-menu');\n    // console.log(icon_menu);\n    $('.icon-menu').click(function () {\n\n        toggleResponsiveMenu();\n    });\n    function toggleResponsiveMenu() {\n        $('.menu').toggleClass('responsive');\n\n        // var icon_menu = document.getElementsByClassName('icon-menu')[0];\n        // if (icon_menu.className === \"topnav\") {\n        //     icon_menu.className += \" responsive\";\n        // } else {\n        //     icon_menu.className = \"topnav\";\n        // }\n    }\n\n    $(document).ready(function () {\n        $('.bxslider').bxSlider({\n            pager: false\n        });\n    });\n    $(\".accordion-panel\").customScrollbar({});\n\n    $('.accordion').collapsible({\n        accordion: true,\n        contentOpen: 0,\n        animate: false\n        // accordionUpSpeed: 150,\n        // accordionDownSpeed: 400,\n        //\n        // collapseSpeed: 400,\n\n    });\n    $(\".viewport\").css(\"width\", \"auto\")\n\n});"]}