// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$dribble-name: 'dribble';
$dribble-x: 54px;
$dribble-y: 18px;
$dribble-offset-x: -54px;
$dribble-offset-y: -18px;
$dribble-width: 16px;
$dribble-height: 16px;
$dribble-total-width: 85px;
$dribble-total-height: 56px;
$dribble-image: '../img/sprite/sprite.png';
$dribble: (54px, 18px, -54px, -18px, 16px, 16px, 85px, 56px, '../img/sprite/sprite.png', 'dribble', );
$facebook-name: 'facebook';
$facebook-x: 72px;
$facebook-y: 36px;
$facebook-offset-x: -72px;
$facebook-offset-y: -36px;
$facebook-width: 8px;
$facebook-height: 16px;
$facebook-total-width: 85px;
$facebook-total-height: 56px;
$facebook-image: '../img/sprite/sprite.png';
$facebook: (72px, 36px, -72px, -36px, 8px, 16px, 85px, 56px, '../img/sprite/sprite.png', 'facebook', );
$google-plus-name: 'google-plus';
$google-plus-x: 0px;
$google-plus-y: 42px;
$google-plus-offset-x: 0px;
$google-plus-offset-y: -42px;
$google-plus-width: 16px;
$google-plus-height: 14px;
$google-plus-total-width: 85px;
$google-plus-total-height: 56px;
$google-plus-image: '../img/sprite/sprite.png';
$google-plus: (0px, 42px, 0px, -42px, 16px, 14px, 85px, 56px, '../img/sprite/sprite.png', 'google-plus', );
$instagram-name: 'instagram';
$instagram-x: 54px;
$instagram-y: 0px;
$instagram-offset-x: -54px;
$instagram-offset-y: 0px;
$instagram-width: 16px;
$instagram-height: 16px;
$instagram-total-width: 85px;
$instagram-total-height: 56px;
$instagram-image: '../img/sprite/sprite.png';
$instagram: (54px, 0px, -54px, 0px, 16px, 16px, 85px, 56px, '../img/sprite/sprite.png', 'instagram', );
$pinterest-name: 'pinterest';
$pinterest-x: 72px;
$pinterest-y: 0px;
$pinterest-offset-x: -72px;
$pinterest-offset-y: 0px;
$pinterest-width: 13px;
$pinterest-height: 16px;
$pinterest-total-width: 85px;
$pinterest-total-height: 56px;
$pinterest-image: '../img/sprite/sprite.png';
$pinterest: (72px, 0px, -72px, 0px, 13px, 16px, 85px, 56px, '../img/sprite/sprite.png', 'pinterest', );
$search-icon-name: 'search-icon';
$search-icon-x: 34px;
$search-icon-y: 0px;
$search-icon-offset-x: -34px;
$search-icon-offset-y: 0px;
$search-icon-width: 18px;
$search-icon-height: 18px;
$search-icon-total-width: 85px;
$search-icon-total-height: 56px;
$search-icon-image: '../img/sprite/sprite.png';
$search-icon: (34px, 0px, -34px, 0px, 18px, 18px, 85px, 56px, '../img/sprite/sprite.png', 'search-icon', );
$shop-icon-name: 'shop-icon';
$shop-icon-x: 0px;
$shop-icon-y: 25px;
$shop-icon-offset-x: 0px;
$shop-icon-offset-y: -25px;
$shop-icon-width: 18px;
$shop-icon-height: 15px;
$shop-icon-total-width: 85px;
$shop-icon-total-height: 56px;
$shop-icon-image: '../img/sprite/sprite.png';
$shop-icon: (0px, 25px, 0px, -25px, 18px, 15px, 85px, 56px, '../img/sprite/sprite.png', 'shop-icon', );
$tumbl-name: 'tumbl';
$tumbl-x: 72px;
$tumbl-y: 18px;
$tumbl-offset-x: -72px;
$tumbl-offset-y: -18px;
$tumbl-width: 10px;
$tumbl-height: 16px;
$tumbl-total-width: 85px;
$tumbl-total-height: 56px;
$tumbl-image: '../img/sprite/sprite.png';
$tumbl: (72px, 18px, -72px, -18px, 10px, 16px, 85px, 56px, '../img/sprite/sprite.png', 'tumbl', );
$twitter-name: 'twitter';
$twitter-x: 20px;
$twitter-y: 25px;
$twitter-offset-x: -20px;
$twitter-offset-y: -25px;
$twitter-width: 16px;
$twitter-height: 14px;
$twitter-total-width: 85px;
$twitter-total-height: 56px;
$twitter-image: '../img/sprite/sprite.png';
$twitter: (20px, 25px, -20px, -25px, 16px, 14px, 85px, 56px, '../img/sprite/sprite.png', 'twitter', );
$users-icon-name: 'users-icon';
$users-icon-x: 0px;
$users-icon-y: 0px;
$users-icon-offset-x: 0px;
$users-icon-offset-y: 0px;
$users-icon-width: 32px;
$users-icon-height: 23px;
$users-icon-total-width: 85px;
$users-icon-total-height: 56px;
$users-icon-image: '../img/sprite/sprite.png';
$users-icon: (0px, 0px, 0px, 0px, 32px, 23px, 85px, 56px, '../img/sprite/sprite.png', 'users-icon', );
$youtube-name: 'youtube';
$youtube-x: 18px;
$youtube-y: 42px;
$youtube-offset-x: -18px;
$youtube-offset-y: -42px;
$youtube-width: 16px;
$youtube-height: 12px;
$youtube-total-width: 85px;
$youtube-total-height: 56px;
$youtube-image: '../img/sprite/sprite.png';
$youtube: (18px, 42px, -18px, -42px, 16px, 12px, 85px, 56px, '../img/sprite/sprite.png', 'youtube', );
$spritesheet-width: 85px;
$spritesheet-height: 56px;
$spritesheet-image: '../img/sprite/sprite.png';
$spritesheet-sprites: ($dribble, $facebook, $google-plus, $instagram, $pinterest, $search-icon, $shop-icon, $tumbl, $twitter, $users-icon, $youtube, );
$spritesheet: (85px, 56px, '../img/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
